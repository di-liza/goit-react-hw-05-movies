{"version":3,"file":"static/js/134.721f2b7f.chunk.js","mappings":"mPA+EA,UAxEA,WAAmB,IAAD,EACVA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAEjD,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAsCA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,yFACI,KAAhBV,EADY,iCAGZQ,EAAU,WAHE,UAIcG,EAAAA,EAAAA,IAAYX,GAJ1B,gBAKW,KADfY,EAJI,EAIJA,SACIC,QACVL,EAAU,YACVJ,GAAU,OAAIQ,KAEdJ,EAAU,QATA,kDAYZM,QAAQC,IAAR,MAZY,0DAAH,qDAgBfL,GACD,GAAE,CAACV,KAGF,4BACc,YAAXO,IAAwB,SAAC,KAAD,KACzB,SAAC,KAAD,CACES,aApCmB,SAAAC,GACvBA,EAAMC,iBACe,KAAjBb,EAAMc,SACRX,EAAU,QACVM,QAAQC,IAAI,6CAEd,IAAMK,EACa,KAAjBf,EAAMc,OAAgBpB,EAAgB,CAAEM,MAAAA,IAAWN,EAAgB,CAAC,GAEtE,OADAO,EAAS,IACFc,CACR,EA2BKC,cAzCoB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACrChB,EAASgB,EACV,EAwCKE,WAAYnB,IAEF,SAAXE,IACC,cACEkB,MAAO,CACLC,OAAQ,YACRC,MAAO,SAHX,sDAUU,aAAXpB,IACC,SAAC,KAAD,CAAYJ,OAAQA,EAAQR,SAAUA,MAI7C,C","sources":["pages/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { searchMovie } from 'servises';\nimport { MoviesList, SearchBar } from 'components';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from 'components';\n\nfunction Movies() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [status, setStatus] = useState('idle');\n\n  const handleInputChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      setStatus('idle');\n      console.log('Enter a keyword to search for the movie.');\n    }\n    const saveQuery =\n      query.trim() !== '' ? setSearchParams({ query }) : setSearchParams({});\n    setQuery('');\n    return saveQuery;\n  };\n\n  useEffect(() => {\n    const getMovies = async () => {\n      if (searchQuery !== '') {\n        try {\n          setStatus('pending');\n          const { results } = await searchMovie(searchQuery);\n          if (results.length !== 0) {\n            setStatus('resolved');\n            setMovies([...results]);\n          } else {\n            setStatus('idle');\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    getMovies();\n  }, [searchQuery]);\n\n  return (\n    <main>\n      {status === 'pending' && <Loader />}\n      <SearchBar\n        onFormSubmit={handleFormSubmit}\n        onInputChange={handleInputChange}\n        inputValue={query}\n      />\n      {status === 'idle' && (\n        <p\n          style={{\n            margin: '30px auto',\n            width: '320px',\n          }}\n        >\n          Enter a keyword to search for the movie.\n        </p>\n      )}\n\n      {status === 'resolved' && (\n        <MoviesList movies={movies} location={location} />\n      )}\n    </main>\n  );\n}\n\nexport default Movies;\n"],"names":["location","useLocation","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","movies","setMovies","query","setQuery","status","setStatus","useEffect","getMovies","searchMovie","results","length","console","log","onFormSubmit","event","preventDefault","trim","saveQuery","onInputChange","value","target","inputValue","style","margin","width"],"sourceRoot":""}