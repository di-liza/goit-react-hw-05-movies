{"version":3,"file":"static/js/415.7884ab9b.chunk.js","mappings":"iOAoDA,UA/CA,WAAiB,IAAD,EACd,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAU,UAAGF,EAAaG,IAAI,eAApB,QAA+B,EAC/C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACjBR,GAAc,GADG,iCAGjBM,GAAa,GAHI,UAISG,EAAAA,EAAAA,IAAkBT,GAJ3B,gBAITU,EAJS,EAITA,QACRN,EAAUM,GALO,kDAOjBC,QAAQC,IAAI,SAAZ,MAPiB,yBASjBN,GAAa,GATI,6EAAH,qDAapBE,GACD,GAAE,CAACR,KAgBF,iBAAKa,MAAO,CAAEC,cAAe,QAA7B,WACE,SAAC,KAAD,KACA,SAAC,KAAD,CAAYX,OAAQA,EAAQY,KAAM,aAClC,SAAC,KAAD,CAAWC,gBAjBU,SAAAC,GACvB,GAAmB,IAAfjB,GAA+B,SAAXiB,EACtB,OAAOlB,EAAgB,CAAEmB,KAAM,IAEjC,IAAMC,EAAWC,OAAOtB,EAAaG,IAAI,UAAY,EAGnDF,EADa,SAAXkB,EACc,CAAEC,KAAMC,EAAW,GAEnB,CAAED,KAAMC,EAAW,GAEtC,EAMiDD,KAAMlB,IACnDK,IAAa,SAAC,KAAD,MAGnB,C","sources":["pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getTrendingMovies } from 'servises';\nimport { MoviesList, Hero, SwButtons, Loader } from 'components';\n\nfunction Home() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchPage = searchParams.get('page') ?? 1;\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getTrandMovies = async () => {\n      if (searchPage >= 1) {\n        try {\n          setIsLoading(true);\n          const { results } = await getTrendingMovies(searchPage);\n          setMovies(results);\n        } catch (error) {\n          console.log('error:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    getTrandMovies();\n  }, [searchPage]);\n\n  const handlePageToggle = action => {\n    if (searchPage === 1 && action === 'prev')\n      return setSearchParams({ page: 1 });\n\n    const prevPage = Number(searchParams.get('page')) || 1;\n\n    if (action === 'prev') {\n      setSearchParams({ page: prevPage - 1 });\n    } else {\n      setSearchParams({ page: prevPage + 1 });\n    }\n  };\n\n  return (\n    <div style={{ paddingBottom: '20px' }}>\n      <Hero />\n      <MoviesList movies={movies} path={'movies/'} />\n      <SwButtons onClickSwichBtn={handlePageToggle} page={searchPage} />\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n\nexport default Home;\n\n// Example for swich btns\n/**\n *  const handlePageToggle = action => {\n       setPage(prev => {\n         if (prev === 1 && action === 'prev') return setPage(1);\n         return action === 'prev' ? prev - 1 : prev + 1;\n       });\n     };\n */\n"],"names":["useSearchParams","searchParams","setSearchParams","searchPage","get","useState","movies","setMovies","isLoading","setIsLoading","useEffect","getTrandMovies","getTrendingMovies","results","console","log","style","paddingBottom","path","onClickSwichBtn","action","page","prevPage","Number"],"sourceRoot":""}