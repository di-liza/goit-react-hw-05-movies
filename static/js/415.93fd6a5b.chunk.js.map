{"version":3,"file":"static/js/415.93fd6a5b.chunk.js","mappings":"2PAgFA,UAxEA,WAAiB,IAAD,EACd,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,eAApB,QAA+B,EAE/C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAoCA,OAlCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACjBV,GAAc,GADG,iCAGjBQ,GAAa,GAHI,UAIsBG,EAAAA,EAAAA,IAAkBX,GAJxC,gBAITY,EAJS,EAITA,QAASC,EAJA,EAIAA,YACjBP,EAAcO,GACdT,EAAUQ,GANO,kDAQjBE,QAAQC,IAAI,SAAZ,MARiB,yBAUjBP,GAAa,GAVI,6EAAH,qDAcpBE,GACD,GAAE,CAACV,KAmBF,UAAC,KAAD,YACE,SAAC,KAAD,KACA,eACEgB,MAAO,CACLC,UAAW,SACXC,OAAQ,iBACRC,SAAU,QAJd,oCASA,SAAC,KAAD,CAAYhB,OAAQA,EAAQiB,KAAM,YAEjCb,IAAa,SAAC,KAAD,KACd,SAAC,IAAD,CACEc,WAAW,MACXC,UAAU,IACVC,aAtBkB,SAAAC,GACtBzB,EAAgB,CAAE0B,KAAMD,EAAME,SAAW,GAC1C,EAqBKC,mBAAoB,EACpBC,UAAWvB,EACXwB,cAAc,IACdC,sBAAuB,KACvBC,mBAAoB,6BAEtB,SAAC,KAAD,MAGL,C","sources":["pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport { getTrendingMovies } from 'servises';\n\nimport { MoviesList, Hero, Loader, Footer } from 'components';\nimport { Container } from 'components/Layout/Layout.styled';\n\nfunction Home() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchPage = searchParams.get('page') ?? 1;\n\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getTrandMovies = async () => {\n      if (searchPage >= 1) {\n        try {\n          setIsLoading(true);\n          const { results, total_pages } = await getTrendingMovies(searchPage);\n          setTotalPages(total_pages);\n          setMovies(results);\n        } catch (error) {\n          console.log('error:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    getTrandMovies();\n  }, [searchPage]);\n\n  // const handlePageToggle = action => {\n  //   if (searchPage === 1 && action === 'prev')\n  //     return setSearchParams({ page: 1 });\n\n  //   const prevPage = Number(searchParams.get('page')) || 1;\n\n  //   if (action === 'prev') {\n  //     setSearchParams({ page: prevPage - 1 });\n  //   } else {\n  //     setSearchParams({ page: prevPage + 1 });\n  //   }\n  // };\n  const handlePageClick = event => {\n    setSearchParams({ page: event.selected + 1 });\n  };\n\n  return (\n    <Container>\n      <Hero />\n      <h2\n        style={{\n          textAlign: 'center',\n          margin: '30px 0 0 186px',\n          fontSize: '40px',\n        }}\n      >\n        In this week's trend:\n      </h2>\n      <MoviesList movies={movies} path={'movies/'} />\n      {/* <SwButtons onClickSwichBtn={handlePageToggle} page={searchPage} /> */}\n      {isLoading && <Loader />}\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        pageCount={totalPages}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n        containerClassName={'paginationListContainer'}\n      />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default Home;\n\n// Example for swich btns\n/**\n *  const handlePageToggle = action => {\n       setPage(prev => {\n         if (prev === 1 && action === 'prev') return setPage(1);\n         return action === 'prev' ? prev - 1 : prev + 1;\n       });\n     };\n */\n"],"names":["useSearchParams","searchParams","setSearchParams","searchPage","get","useState","movies","setMovies","totalPages","setTotalPages","isLoading","setIsLoading","useEffect","getTrandMovies","getTrendingMovies","results","total_pages","console","log","style","textAlign","margin","fontSize","path","breakLabel","nextLabel","onPageChange","event","page","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","containerClassName"],"sourceRoot":""}