{"version":3,"file":"static/js/415.163aa2e0.chunk.js","mappings":"iNAIaA,GAAmBC,EAFJC,EAAQ,MAA5BC,SAE+BC,IAAPH,CAAH,2e,SCa7B,MAdA,YAAsD,IAAhCI,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WACrC,OACE,SAACN,EAAD,CACEO,WAAW,MACXC,UAAU,IACVC,aAAcJ,EACdK,mBAAoB,EACpBC,UAAWL,EACXM,cAAc,IACdC,sBAAuB,MAG5B,C,8ICqDD,UA5DA,WAAiB,IAAD,EACd,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,eAApB,QAA+B,EAE/C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOb,EAAP,KAAmBgB,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAyCA,OAvCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6FACjBT,GAAc,GADG,iCAGjBO,GAAa,GAHI,UAIsBG,EAAAA,EAAAA,IAAkBV,GAJxC,gBAITW,EAJS,EAITA,QAASC,EAJA,EAIAA,YACjBP,EAAcO,GACdR,EAAUO,GANO,kDAQjBE,QAAQC,IAAI,SAAZ,MARiB,yBAUjBP,GAAa,GAVI,6EAAH,qDAcpBE,GACD,GAAE,CAACT,KAwBF,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,CAAYG,OAAQA,EAAQY,KAAM,YAEjCT,IAAa,SAAC,KAAD,KACd,SAAC,IAAD,CAAYlB,gBAhBQ,SAAA4B,GACtBH,QAAQC,IAAI,SAAUE,GACC,IAAnBA,EAAMC,SACRlB,EAAgB,CAAEmB,KAAM,IAExBnB,EAAgB,CAAEmB,KAAMF,EAAMC,SAAW,GAE5C,EASiD5B,WAAYA,KAC1D,SAAC,KAAD,MAGL,C","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","pages/Home.jsx"],"sourcesContent":["import ReactPaginate from 'react-paginate';\n\nconst { default: styled } = require('@emotion/styled');\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n\n  li {\n    width: 45px;\n    height: 25px;\n    display: flex;\n    background-color: #900909;\n    border-radius: 4px;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 10px;\n    transition: background-color 0.3s ease;\n\n    &:hover {\n      background-color: #ff0c0c;\n    }\n    a {\n      display: inline-block;\n      padding: 3px 18px;\n    }\n  }\n`;\n","import React from 'react';\nimport { PaginationStyled } from './Pagination.styled';\n\nfunction Pagination({ handlePageClick, totalPages }) {\n  return (\n    <PaginationStyled\n      breakLabel=\"...\"\n      nextLabel=\">\"\n      onPageChange={handlePageClick}\n      pageRangeDisplayed={5}\n      pageCount={totalPages}\n      previousLabel=\"<\"\n      renderOnZeroPageCount={null}\n    />\n  );\n}\n\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getTrendingMovies } from 'servises';\n\nimport { MoviesList, Hero, Loader, Footer, HomeTitle } from 'components';\nimport { Container } from 'components/Layout/Layout.styled';\nimport Pagination from 'components/Pagination/Pagination';\n\nfunction Home() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchPage = searchParams.get('page') ?? 1;\n\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getTrandMovies = async () => {\n      if (searchPage >= 1) {\n        try {\n          setIsLoading(true);\n          const { results, total_pages } = await getTrendingMovies(searchPage);\n          setTotalPages(total_pages);\n          setMovies(results);\n        } catch (error) {\n          console.log('error:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    getTrandMovies();\n  }, [searchPage]);\n\n  // const handlePageToggle = action => {\n  //   if (searchPage === 1 && action === 'prev')\n  //     return setSearchParams({ page: 1 });\n\n  //   const prevPage = Number(searchParams.get('page')) || 1;\n\n  //   if (action === 'prev') {\n  //     setSearchParams({ page: prevPage - 1 });\n  //   } else {\n  //     setSearchParams({ page: prevPage + 1 });\n  //   }\n  // };\n  const handlePageClick = event => {\n    console.log('event:', event);\n    if (event.selected === 0) {\n      setSearchParams({ page: 1 });\n    } else {\n      setSearchParams({ page: event.selected + 1 });\n    }\n  };\n\n  return (\n    <Container>\n      <Hero />\n      <HomeTitle />\n      <MoviesList movies={movies} path={'movies/'} />\n      {/* <SwButtons onClickSwichBtn={handlePageToggle} page={searchPage} /> */}\n      {isLoading && <Loader />}\n      <Pagination handlePageClick={handlePageClick} totalPages={totalPages} />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default Home;\n\n// Example for swich btns\n/**\n *  const handlePageToggle = action => {\n       setPage(prev => {\n         if (prev === 1 && action === 'prev') return setPage(1);\n         return action === 'prev' ? prev - 1 : prev + 1;\n       });\n     };\n */\n"],"names":["PaginationStyled","styled","require","default","ReactPaginate","handlePageClick","totalPages","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","useSearchParams","searchParams","setSearchParams","searchPage","get","useState","movies","setMovies","setTotalPages","isLoading","setIsLoading","useEffect","getTrandMovies","getTrendingMovies","results","total_pages","console","log","path","event","selected","page"],"sourceRoot":""}